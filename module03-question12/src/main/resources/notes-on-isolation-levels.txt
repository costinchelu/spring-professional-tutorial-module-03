TransactionIsolation.SERIALIZABLE

    The first read operation hangs for the timeout of 10 sec (set by the countDownLatch) because SERIALIZABLE is using read-write locks.
    The read operation locks all the records so the write operation will wait for the read operation to finish.
    Then the 4th read will wait for the writing operation and on this final read we will see the written data.
    In this case, it affects the concurrency.

    > First Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    > Second Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    > Third Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    >> Finishing Reading
    Saved employee [4]
    Updated employee email [6]
    >> Finishing Writing
    >> Fourth Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...email=XXX.XXX@XXX.XXX...
    Employee(id=4...
    >> Finishing 4th Reading


TransactionIsolation.REPEATABLE_READ

    Phantom read MAY occur.
    We will not observe any delay

    > First Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    > Write Operation
    Saved employee [4]
    Updated employee email [6]
    > Second Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    >> Finishing Writing
    > Third Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    >> Finishing Reading
    >> Fourth Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...email=XXX.XXX@XXX.XXX...
    Employee(id=4...
    >> Finishing 4th Reading


TransactionIsolation.READ_COMMITTED

    We can already see the changes made in the third read

    > First Read Operation
    >> Starting Writing Thread
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    > Write Operation
    Saved employee [4]
    Updated employee email [6]
    > Second Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    >> Finishing Writing
    > Third Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...email=XXX.XXX@XXX.XXX...
    Employee(id=4...
    >> Finishing Reading
    >> Fourth Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...email=XXX.XXX@XXX.XXX...
    Employee(id=4...
    >> Finishing 4th Reading


TransactionIsolation.READ_UNCOMMITTED

    > First Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...
    > Write Operation
    Saved employee [4]
    Updated employee email [6]
    > Second Read Operation
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...email=XXX.XXX@XXX.XXX...
    Employee(id=4...
    >> Finishing Writing
    > Third Read Operation - second transaction DID SAVE AND COMMIT DATA
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...email=XXX.XXX@XXX.XXX...
    Employee(id=4...
    >> Finishing Reading
    >> Fourth Read Operation - second transaction did save and commit data, NEW READ TRANSACTION CREATED
    Employee(id=1...
    Employee(id=2...
    Employee(id=3...
    Employee(id=5...
    Employee(id=6...email=XXX.XXX@XXX.XXX...
    Employee(id=4...
    >> Finishing 4th Reading